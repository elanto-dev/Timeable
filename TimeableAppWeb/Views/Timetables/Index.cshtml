@model TimeableAppWeb.ViewModels.TimetableIndexViewModel

@{
    ViewData["Title"] = "Index";
}

@{ var backGroundPicturePath = Model.BackgroundPicture?.Path ?? "/Images/BackgroundPicture.jpg"; }

@for (int i = 0; i < Model.Promotions.Count; i++)
{
    var id = "promo-" + i;
    <div id="@id" class="promotion" style="display: none;" >
        @{ var inputId = "show-promo-" + i + "-seconds"; }
        <input id="@inputId" type="hidden" asp-for="@Model.Promotions[i].ShowAddSeconds" />
        <img src="@Model.Promotions[i].Picture.Path" alt="" style="object-fit: contain; max-height: 100vh; max-width: 100vw; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);">
    </div>
}

<div id="bg-image-wrap" style="background-image: url(@backGroundPicturePath); background-size: 100% 100%; height: 100%;">
    <div align="center">
        <div style="height: 1vh;"></div>
        <div class="card" style="height: 7vh; width: 96vw;">
            <div class="row" style="height: 100%;">
                <div class="col-2" style="height: 100%; align-content: start; display: flex;">
                    <a style="height: 100%; align-content: start; display: flex;" asp-controller="Home" asp-action="Index">
                        <img src="~/Images/TalTechLogo.png" alt="" style="object-fit: contain; width: auto; max-height: 100%; padding-left: 50px;">
                    </a>
                </div>
                <div class="col-8 blue-text" id="clock" style="position: relative; height: 100%;"></div>
                <div class="col-2" id="week-number-div" style="position: relative; height: 100%;"></div>
            </div>
        </div>
        <div style="height: 1vh;"></div>
        <div class="card" style="height: 90vh; width: 96vw; overflow-y: hidden">
            <table class="table table-sm blue-text" id="content-table">
                <tbody>
                @foreach (var item in Model.Events)
                {
                    <tr class="event-bg">
                        <td>
                            <h4>@Html.DisplayFor(modelItem => item.HappeningDateTime)</h4>
                        </td>
                        <td></td>
                        <td>
                            <h4>@Html.DisplayFor(modelItem => item.EventName)</h4>
                        </td>
                        <td></td>
                        <td>
                            <h4>@Html.DisplayFor(modelItem => item.Place)</h4>
                        </td>
                    </tr>
                }
                @foreach (var lecture in Model.LecturesForTimetable)
                {
                    @if (lecture.StartTime < DateTime.Now)
                    {
                        <tr class="started-lesson-bg">
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.StartToEndString)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.LectureType)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.LectureNameWithCode)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.Lecturers)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.Rooms)</h4>
                            </td>
                        </tr>
                    }
                    else if (lecture.StartTime < DateTime.Now.AddMinutes(5))
                    {
                        <tr class="starting-in-5min-lesson-bg">
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.StartToEndString)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.LectureType)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.LectureNameWithCode)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.Lecturers)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.Rooms)</h4>
                            </td>
                        </tr>
                    }
                    else if (lecture.StartTime < DateTime.Now.AddMinutes(15))
                    {
                        <tr class="starting-in-15min-lesson-bg">
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.StartToEndString)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.LectureType)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.LectureNameWithCode)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.Lecturers)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.Rooms)</h4>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.StartToEndString)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.LectureType)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.LectureNameWithCode)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.Lecturers)</h4>
                            </td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => lecture.Rooms)</h4>
                            </td>
                        </tr>
                    }
                }
                </tbody>
            </table>
        </div>
        <div style="height: 1vh;"></div>
    </div>
</div>

<script src="~/lib/jquery/jquery.min.js"></script>

<script>

    var lastUpdated = new Date();
    var currentPromotionCount = '@Model.Promotions.Count';

    window.onload = function () {
        setWeekNumberContent();
        startTime();
        if ('@Model.Promotions.Count' > 0) {
            //changePromotions();
        }
        reloadWhenTimeElapses();
        $('#content-table > tbody  > tr').each(function() {
            $('html, body').animate({
                    scrollTop: $(this).offset().top
                },
                200).delay(2800);
        });
    };

    window.onresize = function () {
        setWeekNumberContent();
    };

    function setWeekNumberContent() {
        var weekNumber = @Model.WeekNumber === 0 ? "" : '@Model.WeekNumber' + '. nädal';
        var heightToAdd = $('#week-number-div').outerHeight() / 2;
        var innerHtml = '<h4 style="margin: 0;position: absolute;left: 50%;top:' +
            heightToAdd +
            'px;transform: translate(-50%, -50%);">' +
            weekNumber +
            '</h4>';
        $('#week-number-div').empty();
        $('#week-number-div').append(innerHtml);
    }

    function reloadWhenTimeElapses() {
        var today = new Date();
        var min = today.getMinutes();
        var sec = today.getSeconds();
        if (min % 5 === 0 && sec === 0) {
            location.reload(true);
        }
        setTimeout(function () { reloadWhenTimeElapses() }, 1000);
    }

    function startTime() {
        var today = new Date();
        var hr = today.getHours();
        var min = today.getMinutes();
        var sec = today.getSeconds();
        //Add a zero in front of numbers<10
        hr = checkTime(hr);
        min = checkTime(min);
        sec = checkTime(sec);

        var days = ['Pühapäev', 'Esmaspäev', 'Teisipäev', 'Kolmapäev', 'Neljapäev', 'Reede', 'Laupäev'];
        var curWeekDay = days[today.getDay()];
        var curDay = today.getDate();
        curDay = (curDay < 10) ? "0" + curDay : curDay;

        // getMonth() starts from 0, add one month to get the right one
        var curMonth = today.getMonth() + 1;
        curMonth = (curMonth < 10) ? "0" + curMonth : curMonth;
        var curYear = today.getFullYear();
        var heightToAdd = $('#clock').outerHeight() / 2;
        var date = '<div style="margin: 0;position: absolute;left: 50%; top:' + heightToAdd + 'px; transform: translate(-50%, -50%);"><h3 style="display: inline;"><b>' + hr + ":" + min + ":" + sec + '</b></h3><h4 style="display: inline;padding-left:1em;">' + " " + curDay + "." + curMonth + "." + curYear + " " + curWeekDay + "</h4></div>";
        $("#clock").empty();
        $("#clock").append(date);
        setTimeout(function(){ startTime() }, 500);
    }

    function checkTime(i) {
        if (i < 10) {
            i = "0" + i;
        }
        return i;
    }

    function changePromotions() {
        var currentTime = new Date();
        if (currentPromotionCount > 0) { // This is promotion
            var index = currentPromotionCount - 1;
            var currentPromoShownId = '#show-promo-' + index + '-seconds';
            var id = '#promo-' + index;
            var currentPromoShown = $(currentPromoShownId).val();
            var promoDateTimeIfSecondsUpdated =
                new Date(
                    lastUpdated.getFullYear(),
                    lastUpdated.getMonth(),
                    lastUpdated.getDate(),
                    lastUpdated.getHours(),
                    lastUpdated.getMinutes(),
                    lastUpdated.getSeconds());
            promoDateTimeIfSecondsUpdated.setSeconds(promoDateTimeIfSecondsUpdated.getSeconds() + currentPromoShown);
            alert("Now: " + currentTime + ", promo upd: " + promoDateTimeIfSecondsUpdated + ", last upd: " + lastUpdated + ", add seconds: " + currentPromoShown);
            if (currentTime > promoDateTimeIfSecondsUpdated) {
                $('.promotion').each(function () {
                    $(this).css('display', 'none');
                });
                $('#bg-image-wrap').css('display', 'none');
                if (currentPromotionCount == '@Model.Promotions.Count') {
                    $('#bg-image-wrap').css('display', 'contents');
                    currentPromotionCount = 0;
                } else {
                    alert("next promo!");
                    $(id).css('display', 'contents');
                    currentPromotionCount++;
                }
                lastUpdated = new Date();
            }
        } else {
            var dateTimeIfSecondsUpdated =
                new Date(
                    lastUpdated.getFullYear(),
                    lastUpdated.getMonth(),
                    lastUpdated.getDate(),
                    lastUpdated.getHours(),
                    lastUpdated.getMinutes(),
                    lastUpdated.getSeconds());
            dateTimeIfSecondsUpdated.setSeconds(dateTimeIfSecondsUpdated.getSeconds() + '@Model.ShowScheduleSeconds');
            alert("Now: " + currentTime + ", schedule upd: " + dateTimeIfSecondsUpdated + ", last upd: " + lastUpdated + ", add seconds: " + '@Model.ShowScheduleSeconds');
            if (currentTime > dateTimeIfSecondsUpdated) {
                $('.promotion').each(function () {
                    $(this).css('display', 'none');
                });
                $('#bg-image-wrap').css('display', 'none');
                $('#promo-0').css('display', 'contents');
                currentPromotionCount++;
                lastUpdated = new Date();
            }
        }
        setTimeout(function () { changePromotions() }, 1000);
    }
</script>

