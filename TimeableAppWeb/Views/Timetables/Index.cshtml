@model TimeableAppWeb.ViewModels.TimetableIndexViewModel
@inject SignInManager<AppUser> SignInManager

@{
    ViewData["Title"] = "Timetable";
}

@{ var backGroundPicturePath = Model.BackgroundPicture?.Path ?? "/Images/BackgroundPicture.jpg"; }

@for (int i = 0; i < Model.Promotions.Count; i++)
{
    var id = "promo-" + i;
    <div id="@id" class="promotion" style="display: none;">
        @{ var inputId = "show-promo-" + i + "-seconds"; }
        <input id="@inputId" type="hidden" asp-for="@Model.Promotions[i].ShowAddSeconds" />
        <img src="@Model.Promotions[i].Picture.Path" alt="" style="object-fit: fill; max-height: 100vh; max-width: 100vw; position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%);">
    </div>
}

<div id="bg-image-wrap" style="background-image: url(@backGroundPicturePath); background-size: 100% 100%; height: 100%;">
    <div align="center">
        <div style="height: 1vh;"></div>
        <div class="card" style="height: 7vh; width: 96vw;">
            <div class="row" style="height: 100%;">
                <div class="col-2" style="height: 100%; align-content: start; display: flex;">
                    @if (SignInManager.IsSignedIn(User))
                    {
                        <a style="height: 100%; align-content: start; display: flex;" asp-area="Admin" asp-controller="Home" asp-action="Index">
                            <img src="~/Images/TalTechLogo.png" alt="" style="object-fit: contain; width: auto; max-height: 100%; padding-left: 50px;">
                        </a>
                    }
                    else
                    {
                        <a style="height: 100%; align-content: start; display: flex;" asp-controller="Home" asp-action="Index">
                            <img src="~/Images/TalTechLogo.png" alt="" style="object-fit: contain; width: auto; max-height: 100%; padding-left: 50px;">
                        </a>
                    }
                </div>
                <div class="col-8 blue-text" id="clock" style="position: relative; height: 100%;"></div>
                <div class="col-2" id="week-number-div" style="position: relative; height: 100%;"></div>
            </div>
        </div>
        <div style="height: 1vh;"></div>
        <div class="card" style="height: 90vh; width: 96vw; overflow-y: hidden">
            <table class="table table-sm blue-text" id="content-table">
                <tbody>
                    @foreach (var item in Model.Events)
                    {
                        <tr class="event-bg">
                            <td>
                                <h4>@Html.DisplayFor(modelItem => item.HappeningDateTime)</h4>
                            </td>
                            <td></td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => item.EventName)</h4>
                            </td>
                            <td></td>
                            <td>
                                <h4>@Html.DisplayFor(modelItem => item.Place)</h4>
                            </td>
                        </tr>
                    }
                    @foreach (var lecture in Model.LecturesForTimetable)
                    {
                        @if (lecture.StartTime < DateTime.Now)
                        {
                            <tr class="started-lesson-bg">
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.StartToEndString)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.LectureType)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.LectureNameWithCode)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.Lecturers)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.Rooms)</h4>
                                </td>
                            </tr>
                        }
                        else if (lecture.StartTime < DateTime.Now.AddMinutes(5))
                        {
                            <tr class="starting-in-5min-lesson-bg">
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.StartToEndString)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.LectureType)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.LectureNameWithCode)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.Lecturers)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.Rooms)</h4>
                                </td>
                            </tr>
                        }
                        else if (lecture.StartTime < DateTime.Now.AddMinutes(15))
                        {
                            <tr class="starting-in-15min-lesson-bg">
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.StartToEndString)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.LectureType)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.LectureNameWithCode)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.Lecturers)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.Rooms)</h4>
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.StartToEndString)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.LectureType)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.LectureNameWithCode)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.Lecturers)</h4>
                                </td>
                                <td>
                                    <h4>@Html.DisplayFor(modelItem => lecture.Rooms)</h4>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div style="height: 1vh;"></div>
    </div>
</div>

<script src="~/lib/jquery/jquery.min.js"></script>

<script>

    var lastUpdated = new Date();
    var nextUpdate;
    var currentPromotionCount = '@Model.Promotions.Count';
    var dateSizeStyle = 1;
    var timeSizeStyle = 2;
    var weekSizeStyle = 2;
    var weekPosition;
    var heighToAddToDateTime;


    window.onload = function () {
        setWeekNumberContent(true);
        startTime(true);
        if ('@Model.Promotions.Count' > 0) {
            changePromotions(true);
        }
        reloadWhenTimeElapses();
        $('#content-table > tbody  > tr').each(function() {
            $('html, body').animate({
                    scrollTop: $(this).offset().top
                },
                200).delay(2800);
        });
    };

    window.onresize = function () {
        setWeekNumberContent(true);
        startTime(true);
    };

    function setWeekNumberContent(overwrite) {
        var weekNumber = @Model.WeekNumber === 0 ? "" : '@Model.WeekNumber' + '. nädal';
        if (overwrite === true) {
            var heightToAdd = $('#week-number-div').outerHeight() / 2;

            // Set style according to the window width
            var elementStyle = 2;
            if ($(window).width() < 1560 && $(window).width() > 1370) {
                elementStyle = 3;
            } else if ($(window).width() <= 1370 && $(window).width() > 1170) {
                elementStyle = 4;
            } else if ($(window).width() <= 1170 && $(window).width() > 970) {
                elementStyle = 5;
            } else if ($(window).width() <= 970) {
                elementStyle = 6;
            }
            var innerHtml =
                `<h${elementStyle} style="margin: 0;position: absolute;left: 50%;top:${heightToAdd
                    }px;transform: translate(-50%, -50%);">${weekNumber}</h${elementStyle}>`;
            $('#week-number-div').empty();
            $('#week-number-div').append(innerHtml);
            weekSizeStyle = elementStyle;
            weekPosition = $('#week-number-div').offset();
        } else {
            var innerHtmlNoOverwrite = '<h' + weekSizeStyle + '>' + weekNumber + '</h' + weekSizeStyle + '>';
            $('#week-number-div').empty();
            $('#week-number-div').append(innerHtmlNoOverwrite);
            $('#week-number-div').offset({ top: weekPosition.top, left: weekPosition.left });
        }

    }

    function reloadWhenTimeElapses() {
        var today = new Date();
        var min = today.getMinutes();
        var sec = today.getSeconds();
        if (min % 5 === 0 && sec === 0) {
            location.reload(true);
        }
        setTimeout(function() { reloadWhenTimeElapses() }, 1000);
    }

    function startTime(overwrite) {
        var today = new Date();
        var hr = today.getHours();
        var min = today.getMinutes();
        var sec = today.getSeconds();
        //Add a zero in front of numbers<10
        hr = checkTime(hr);
        min = checkTime(min);
        sec = checkTime(sec);

        var days = ['Pühapäev', 'Esmaspäev', 'Teisipäev', 'Kolmapäev', 'Neljapäev', 'Reede', 'Laupäev'];
        var curWeekDay = days[today.getDay()];
        var curDay = today.getDate();
        curDay = (curDay < 10) ? "0" + curDay : curDay;

        // getMonth() starts from 0, add one month to get the right one
        var curMonth = today.getMonth() + 1;
        curMonth = (curMonth < 10) ? "0" + curMonth : curMonth;
        var curYear = today.getFullYear();
        if (overwrite) {
            var heightToAdd = $('#clock').outerHeight() / 2;
            // Set style according to the window width
            var dateStyle = 1;
            var timeStyle = 2;
            if ($(window).width() < 1560 && $(window).width() > 1350) {
                dateStyle = 2;
                timeStyle = 3;
            } else if ($(window).width() <= 1350 && $(window).width() > 1150) {
                dateStyle = 3;
                timeStyle = 4;
            } else if ($(window).width() <= 1150 && $(window).width() > 970) {
                dateStyle = 4;
                timeStyle = 5;
            } else if ($(window).width() <= 970) {
                dateStyle = 5;
                timeStyle = 6;
            }
            var date =
                `<div style="margin: 0;position: absolute;left: 50%; top:${heightToAdd
                    }px; transform: translate(-50%, -50%);"><h${dateStyle
                    } style="display: inline;"><b>${hr}:${min}:${sec}</b></h${dateStyle}><h${timeStyle
                    } style="display: inline;padding-left:1em;"> ${curDay}.${curMonth
                    }.${curYear} ${curWeekDay}</h${timeStyle}></div>`;
            $("#clock").empty();
            $("#clock").append(date);
            dateSizeStyle = dateStyle;
            timeSizeStyle = timeStyle;
            heighToAddToDateTime = heightToAdd;
        } else {
            var dateNoOverwrite =
                `<div style="margin: 0;position: absolute;left: 50%; top:${heighToAddToDateTime
                    }px; transform: translate(-50%, -50%);"><h${dateSizeStyle
                    } style="display: inline;"><b>${hr}:${min}:${sec}</b></h${dateSizeStyle}><h${timeSizeStyle
                    } style="display: inline;padding-left:1em;"> ${curDay}.${curMonth
                    }.${curYear} ${curWeekDay}</h${timeSizeStyle}></div>`;
            $("#clock").empty();
            $("#clock").append(dateNoOverwrite);
        }
        setTimeout(function() { startTime(false) }, 500);
    }

    function checkTime(i) {
        if (i < 10) {
            i = "0" + i;
        }
        return i;
    }

    function changePromotions(firstTime) {
        const currentTime = new Date();
        if (currentPromotionCount > 0) { // This is promotion
            const id = `#promo-${currentPromotionCount}`;
            if (!firstTime) {
                if (currentTime > nextUpdate) {
                    $('.promotion').each(function() {
                        $(this).css('display', 'none');
                    });
                    $('#bg-image-wrap').css('display', 'none');
                    if (currentPromotionCount == '@Model.Promotions.Count') {
                        $('#bg-image-wrap').css('display', 'block');
                        startTime(true);
                        setWeekNumberContent(true);
                        nextUpdate = currentTime.setTime(currentTime.getTime() + ('@Model.ShowScheduleSeconds' * 1000));
                    } else {
                        $(id).css('display', 'block');
                        nextUpdate = currentTime.setTime(currentTime.getTime() + ($(`#show-promo-${currentPromotionCount}-seconds`).val() * 1000));
                        currentPromotionCount++;
                    }
                    lastUpdated = new Date();
                }
            } else {
                $('#bg-image-wrap').css('display', 'block');
                currentPromotionCount = 0;
                startTime(true);
                setWeekNumberContent(true);
                nextUpdate = currentTime.setTime(currentTime.getTime() + ('@Model.ShowScheduleSeconds' * 1000));
            }
        } else { // This is schedule
            if (currentTime > nextUpdate) {
                $('.promotion').each(function () {
                    $(this).css('display', 'none');
                });
                $('#bg-image-wrap').css('display', 'none');
                $('#promo-0').css('display', 'block');
                currentPromotionCount++;
                lastUpdated = new Date();
                const firstPromo = $("#show-promo-0-seconds").val();
                nextUpdate = currentTime.setTime(currentTime.getTime() + (firstPromo * 1000));
            }
        }
        setTimeout(function () { changePromotions(false) }, 500);
    }
</script>

